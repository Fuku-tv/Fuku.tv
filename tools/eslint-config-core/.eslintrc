{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": ["airbnb", "airbnb/hooks", "plugin:react/recommended", "plugin:@typescript-eslint/recommended", "prettier"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "rules": {
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],

    // allow calls to console.log
    "no-console": "off",

    // opinion rule, no need to restrict syntax that works
    "no-restricted-syntax": "off",

    // typescript already checks for undefined/unsed vars
    "no-undef": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "off",

    //quick fix for https://stackoverflow.com/questions/63818415/react-was-used-before-it-was-defined
    "no-use-before-define": "off",

    // you dont import extensions
    "import/extensions": "off",

    // typescript already handles path resolution
    "import/no-unresolved": "off",

    // disabled, all types auto-fix to interface. rule would be redundant.
    "@typescript-eslint/interface-name-prefix": "off",

    // established coding standards in different packages use a different naming convention
    "@typescript-eslint/camelcase": "off",

    // allow empty arrow functions for useEffect hooks
    "@typescript-eslint/no-empty-function": ["error", { "allow": ["arrowFunctions"] }],

    // redundant with Typescript
    "react/jsx-no-undef": "off",

    // not using defaultProps with typescript/function components
    "react/require-default-props": [0],

    // permit JSX in tsx files
    "react/jsx-filename-extension": ["error", { "extensions": ["tsx"] }],

    // removes prop-types requirement because Typescript
    "react/prop-types": "off",

    // destructuring props is not required, this can malform redux state updates
    "react/destructuring-assignment": "off",

    // why is this needed?
    "react/button-has-type": "off",

    // conflicts with prettier formatting (print limit)
    "react/jsx-one-expression-per-line": "off",

    // not needed for certain React Functions
    "@typescript-eslint/explicit-function-return-type": "off",

    // modified, removes code-bloat accessors in TS React.
    "@typescript-eslint/explicit-member-accessibility": "off",

    // deprecated
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/label-has-associated-control": "off"
  }
}
